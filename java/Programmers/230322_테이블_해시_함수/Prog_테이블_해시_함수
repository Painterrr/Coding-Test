import java.util.*;
import java.io.*;

class Solution {
    public int solution(int[][] data, int col, int row_begin, int row_end) {
        int answer = 0;
        // data에 있는 것을 col번쨰 원소를 기준으로 오름차순 정렬
        int[][] tmp = data;
        Arrays.sort(tmp, new Comparator<int[]>() {
        	@Override
        	public int compare(int[] o1, int[] o2) {
        		// col번째 원소가 같으면 첫 원소를 기준으로 내림차순 정렬
        		if(o1[col - 1] == o2[col - 1]) 
        			return o2[0] - o1[0];
        		else return o1[col - 1] - o2[col - 1];
        	}
		});
        
        int len = data.length;
        // S_i는 각 튜플에 대해 각 컬럼의 값을 i로 나눈 나머지들의 합
        // row_begin ~ row_end인 모든 S_i를 누적하여 XOR 비트 연산 = answer
        for(int i = row_begin - 1; i < row_end; i++) {
        	int S = 0;
        	
        	for(int column : data[i]) {
        		S += (column % (i + 1));
        	}

        	answer ^= S;
        }
        System.out.println(answer);
        return answer;
    }
}
