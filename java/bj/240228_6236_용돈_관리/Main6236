import java.io.*;
import java.util.*;

public class Main {
	static int N, M;
	static int[] arr;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N];
		int max = 0;

		for (int i = 0; i < N; i++) {
			arr[i] = Integer.parseInt(br.readLine());
			if (max < arr[i])
				max = arr[i];
		}

		find(max);
	}

	public static void find(int max) {
		int left = max;
		int right = 1000000000;
		int K = 1000000000;

		while (left <= right) {
			int mid = left + (right - left) / 2;
			int now = 0;
			int cnt = 0; // 인출 횟수

//			System.out.println("************************");
			for (int i = 0; i < N; i++) {
				if (now - arr[i] >= 0) {
					now -= arr[i];
				} else {
					now = mid - arr[i];
					cnt++;
				}
//				System.out.println("now: " + now);
			}
//			System.out.println("************************");
//
//			System.out.println("left: " + left);
//			System.out.println("right: " + right);
//			System.out.println("mid: " + mid);
//			System.out.println("cnt: " + cnt);
//			System.out.println("------------");

			if (cnt > M)
				left = mid + 1;
			else  {
//				System.out.println("in else, mid: " + mid);
//				System.out.println("in else, cnt: " + cnt);
				K = mid;
				right = mid - 1;
				
			}
//			System.out.println("==================");
		}

		System.out.println("K: " + K);
	}
}
