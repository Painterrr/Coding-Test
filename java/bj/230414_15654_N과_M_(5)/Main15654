import java.util.*;
import java.io.*;

public class Main15654 {
	static int N, M;
	static int[] origin;
	static int[] tmp;
	static boolean[] visited;
	static StringBuilder sb = new StringBuilder();

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		origin = new int[N];
		tmp = new int[M];
		visited = new boolean[N];

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			origin[i] = Integer.parseInt(st.nextToken());
		}

		Arrays.sort(origin);

		dfs(0);
		
		System.out.print(sb);
	}

	private static void dfs(int depth) {
		if (depth == M) {
			for(int i = 0; i < M; i++) {
				sb.append(tmp[i] + " ");
			}
			sb.append("\n");
			return;
		}
		
		for(int i = 0; i < N; i++) {
			if(!visited[i]) {
				visited[i] = true;
				tmp[depth] = origin[i];
				dfs(depth + 1);
				visited[i]= false;
			}
		}
	}
}
