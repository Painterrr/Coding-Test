import java.util.*;
import java.io.*;

public class Main {
	static int[] answer;
	static boolean[] visited;
	static ArrayList<Integer>[] list;
	static int N;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		N = Integer.parseInt(br.readLine());

		answer = new int[N + 1];
		visited = new boolean[N + 1];
		list = new ArrayList[N + 1];

		for (int i = 0; i < N + 1; i++) {
			list[i] = new ArrayList<Integer>();
		}

		for (int i = 0; i < N - 1; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());

			list[a].add(b);
			list[b].add(a);
		}

		dfs(1);

		for (int i = 2; i < N + 1; i++) {
			bw.append(answer[i] + "\n");
		}
		bw.flush();
		bw.close();
	}

	private static void dfs(int start) {
		visited[start] = true;

		for (int i = 0; i < list[start].size(); i++) {
			int index = list[start].get(i);
			if (!visited[index]) {
				answer[index] = start;
				dfs(index);
			}
		}
	}
}
