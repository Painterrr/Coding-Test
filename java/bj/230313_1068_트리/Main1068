import java.util.*;
import java.io.*;

public class Main {
	static int N, D, ans;
	static Node[] arr;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		N = Integer.parseInt(br.readLine());
		int root = -1;
		arr = new Node[N + 1];

		for (int i = 0; i <= N; i++) {
			arr[i] = new Node(i);
		}

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			int parent = Integer.parseInt(st.nextToken());

			if (parent == -1) {
				root = i;
				continue;
			}

			arr[parent].child.add(arr[i]);
		}

		D = Integer.parseInt(br.readLine());

		ans = 0;
		if (D != root) {
			deleteNode(root);
			dfs(root);
		}

		System.out.println(ans);
	}

	private static void deleteNode(int idx) {
		for (Node child : arr[idx].child) {
			if (child.idx == D) {
				arr[idx].child.remove(child);
				return;
			}
			deleteNode(child.idx);
		}
	}

	static void dfs(int idx) {
		if (arr[idx].child.size() == 0) {
			ans++;
			return;
		}

		for (Node child : arr[idx].child) {
			dfs(child.idx);
		}
	}

	static class Node {
		int idx;
		ArrayList<Node> child = new ArrayList<>();

		public Node(int idx) {
			this.idx = idx;
		}
	}
}
