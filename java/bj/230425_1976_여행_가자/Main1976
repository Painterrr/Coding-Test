import java.util.*;
import java.io.*;

public class Main1976 {
	static int[] arr;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;

		int N = Integer.parseInt(br.readLine());
		int M = Integer.parseInt(br.readLine());
		arr = new int[N + 1];

		for (int i = 1; i <= N; i++) {
			arr[i] = i;
		}

		for (int i = 1; i <= N; i++) {
			st = new StringTokenizer(br.readLine());

			for (int j = 1; j <= N; j++) {
				int node = Integer.parseInt(st.nextToken());

				if (node == 1)
					union(i, j);
			}
		}

		st = new StringTokenizer(br.readLine());
		int start = find(Integer.parseInt(st.nextToken()));
		for (int i = 1; i < M; i++) {
			int now = Integer.parseInt(st.nextToken());

			if (start != find(now)) {
				bw.append("NO\n");
				bw.flush();
				bw.close();
				br.close();
				return;
			}
		}

		bw.append("YES\n");
		bw.flush();
		bw.close();
		br.close();
	}

	private static int find(int num) {
		if (arr[num] == num)
			return num;
		return arr[num] = find(arr[num]);
	}

	private static void union(int a, int b) {
		int aRoot = find(a);
		int bRoot = find(b);

		if (aRoot > bRoot)
			arr[aRoot] = bRoot;
		else if (aRoot < bRoot)
			arr[bRoot] = aRoot;
	}
}
