import java.util.*;
import java.io.*;

public class Main {
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		int N = Integer.parseInt(br.readLine());
		int[][] arr = new int[N][2];
		
		for(int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			int start = Integer.parseInt(st.nextToken());
			int end = Integer.parseInt(st.nextToken());
			arr[i][0] = start;
			arr[i][1] = end;
		}
		
		// 종료 시간 기준으로 오름차순 정렬해야 최대 회의 개수 맞출 수 있음
		// 종료 시간이 같으면, 시작 시간 기준 오름차순
		Arrays.sort(arr, new Comparator<int[]>() {
			@Override
			public int compare(int[] front, int[] rear) {
				if(front[1] == rear[1])
					return front[0] - rear[0];
				return front[1] - rear[1];
			}
		});
		
		int[] tmp = arr[0];
		int cnt = 1;
		for(int i = 1; i < arr.length; i++) {
			if(tmp[1] <= arr[i][0]) {
				tmp = arr[i];
				cnt++;
			}
		}
		
		System.out.println(cnt);
	}
}
