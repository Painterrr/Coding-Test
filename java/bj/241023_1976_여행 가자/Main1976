import java.util.*;
import java.io.*;

public class Main {
    static int[] roots;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int m = Integer.parseInt(br.readLine());

        roots = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            roots[i] = i;
        }

        StringTokenizer st;
        for (int i = 0; i < n; i++) {
            st = new StringTokenizer(br.readLine());

            for (int j = 0; j < n; j++) {
                int now = Integer.parseInt(st.nextToken());

                if (now == 1) {
                    union(i + 1, j + 1);
                }
            }
        }

        int[] plan = new int[m];
        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < m; i++) {
            plan[i] = Integer.parseInt(st.nextToken());
        }

        int start = find(plan[0]);
        for (int i = 1; i < m; i++) {
            if (start != find(plan[i])) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
        return;
    }

    public static void union (int a, int b) {
        int A = find(a);
        int B = find(b);

        if (A < B) {
            roots[B] = A;
        } else {
            roots[A] = B;
        }
    }

    public static int find(int n) {
        if (n == roots[n]) {
            return n;
        }

        return roots[n] = find(roots[n]);
    }
}
