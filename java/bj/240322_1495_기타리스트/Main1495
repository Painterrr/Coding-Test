import java.io.*;
import java.util.*;

public class Main {
	static boolean[][] dp;
	static int N, S, M;
	static int[] vol;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		S = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());

		dp = new boolean[N + 1][M + 1];
		vol = new int[N + 1];

		st = new StringTokenizer(br.readLine());
		for (int i = 1; i <= N; i++) {
			vol[i] = Integer.parseInt(st.nextToken());
		}

		dp[0][S] = true;
		play();
	}

	public static void play() {
		int ans = -1;
		
		for (int i = 1; i <= N; i++) {
			for (int j = 0; j <= M; j++) {
				if (dp[i - 1][j]) {
					int up = j + vol[i];
					int dwn = j - vol[i];
					
					if (up <= M)
						dp[i][up] = true;
					if (dwn >= 0)
						dp[i][dwn] = true;
				}
					
			}
		}

		for (int i = 0; i <= M; i++) {
			if (dp[N][i])
				ans = Math.max(ans, i);
		}
		
		System.out.println(ans);
	}
}
