import java.util.*;
import java.io.*;

public class Main1182 {
	static int N, S, cnt;
	static int[] arr;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		S = Integer.parseInt(st.nextToken());
		arr = new int[N];

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}

		dfs(0, 0);
		// 아무 것도 안고르는 경우를 제외해야 함.
		// 아무 것도 안고르는 경우 = 전부 선택하지 않아서 크기가 0인 경우
		if (S == 0)
			cnt -= 1;

		bw.append(cnt + "");
		bw.flush();
		bw.close();
		br.close();
	}

	private static void dfs(int sum, int depth) {
		if (depth == N) {
			if (sum == S)
				cnt++;

			return;
		}

        dfs(sum + arr[depth], depth + 1);
		dfs(sum, depth + 1);
	}
}
