import heapq as hq

def dijkstra(dist, adj):
    heap = []
    hq.heappush(heap, [1, 0])
    
    while heap:
        next, cost = hq.heappop(heap)
        for n, c in adj[next]:
            if cost + c < dist[n]:
                dist[n] = cost + c
                hq.heappush(heap, [n, cost + c])
        

def solution(N, road, K):
    answer = 0
    adj = [[] for _ in range(N + 1)]
    dist = [1e9] * (N + 1)
    dist[1] = 0

    for start, end, cost in road:
        adj[start].append([end, cost])
        adj[end].append([start, cost])

    dijkstra(dist, adj)

    for d in dist:
        if d <= K:
            answer += 1

    return answer
