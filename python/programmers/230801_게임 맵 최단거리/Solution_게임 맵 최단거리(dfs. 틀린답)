def solution(maps):
    answer = 10001
    n = len(maps)
    m = len(maps[0])
    visited = [[False] * m for _ in range(n)]
    dx = [-1, 1, 0, 0]
    dy = [0, 0, -1, 1]
    
    def dfs(x, y, dis):
        nonlocal answer
        
        if x == n - 1 and y == m - 1:
            answer = min(dis, answer)
            return
        
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            
            if 0 > nx or nx >= n or 0 > ny or ny >= m:
                continue
            
            if maps[nx][ny] == 1 and not visited[nx][ny]:
                visited[nx][ny] = True
                dfs(nx, ny, dis + 1)
                visited[nx][ny] = False
    
    visited[0][0] = True
    dfs(0, 0, 1)
    if answer == 10001:
        answer = -1
    return answer
