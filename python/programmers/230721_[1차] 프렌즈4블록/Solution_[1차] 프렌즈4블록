def solution(m, n, board):
    answer = 0
    matrix = [list(board[i]) for i in range(m)]

    squareX = [0, 1, 1]
    squareY = [1, 0, 1]

    def checkMatrix(matrix, check):
        for i in range(m):
            for j in range(n):
                block = matrix[i][j]
                if 'A' > block or block > 'Z':
                    continue
                isSquare = True
                for k in range(3):
                    x = i + squareX[k]
                    y = j + squareY[k]
                    if 0 > x or x >= m or 0 > y or y >= n:
                        isSquare = False
                        break
                    if block != matrix[x][y]:
                        isSquare = False
                        break
                if isSquare:
                    check[i][j] = 1
                    for k in range(3):
                        x = i + squareX[k]
                        y = j + squareY[k]
                        check[x][y] = 1

    def deleteSquare(matrix, check):
        nonlocal cnt
        for i in range(m):
            for j in range(n):
                if check[i][j] == 1:
                    cnt += 1
                    matrix[i][j] = "-"

    def arrangeMatrix(matrix):
        for j in range(n):
            q = []
            for i in range(m - 1, -1, -1):
                q.append(matrix[i][j])
            space = 0
            for i in range(m):
                now = q.pop(0)
                if now == "-":
                    space += 1
                else:
                    q.append(now)
            for i in range(space):
                q.append("-")
            for i in range(m):
                matrix[i][j] = q.pop()

    while True:
        check = [[0] * n for i in range(m)]
        cnt = 0

        checkMatrix(matrix, check)

        deleteSquare(matrix, check)
        if cnt == 0:
            break
        else:
            answer += cnt

        arrangeMatrix(matrix)

    return answer
