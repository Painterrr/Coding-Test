from collections import deque
import sys
input = sys.stdin.readline

N, M, V = map(int, input().split())
nodes = [[0] * (N + 1) for _ in range(N + 1)]
answerDFS = []
answerBFS = []
for _ in range(M):
    a, b = map(int, input().split())
    nodes[a][b] = nodes[b][a] = 1

def dfs(start):
    visited[start] = True
    answerDFS.append(start)
    
    for i in range(1, N + 1):
        if not visited[i] and nodes[start][i]:
            dfs(i)
    
def bfs(start):
    que = deque([start])
    visited[start] = True
    answerBFS.append(start)
    
    while que:
        now = que.popleft()
        
        for i in range(1, N + 1):
            if not visited[i] and nodes[now][i]:
                que.append(i)
                visited[i] = True
                answerBFS.append(i)

visited = [False] * (N + 1)
dfs(V)
visited = [False] * (N + 1)
bfs(V)

print(*answerDFS)
print(*answerBFS)
