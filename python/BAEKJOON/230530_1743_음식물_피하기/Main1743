import sys
sys.setrecursionlimit(100000)
input = sys.stdin.readline

N, M, K = map(int, input().split())
matrix = [[0] * (M + 1) for _ in range(N + 1)]
visited = [[False] * (M + 1) for _ in range(N + 1)]
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
answer = 0

for _ in range(K):
    r, c = map(int, input().split())
    matrix[r][c] = 1

def dfs(X, Y):
    global depth
    depth += 1
    visited[X][Y] = True
    
    for i in range(4):
        x = X + dx[i]
        y = Y + dy[i]
        
        if (1 <= x < (N + 1)) and (1 <= y < (M + 1)):
            if not visited[x][y] and matrix[x][y]:
                dfs(x, y)

for i in range(1, N + 1):
    for j in range(1, M + 1):
        if not visited[i][j] and matrix[i][j]:
            depth = 0
            dfs(i, j)
            answer = max(answer, depth)

print(answer)
