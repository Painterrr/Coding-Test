import sys
sys.setrecursionlimit(10 ** 6)
input = sys.stdin.readline

N, M = map(int, input().split())
matrix = [list(input()) for _ in range(N)]
visited = [[False] * M for _ in range(N)]
dp = [[0] * M for _ in range(N)]
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
answer = 0

def dfs(X, Y, cnt):
    global answer
    answer = max(answer, cnt)
    for i in range(4):
        x = X + int(matrix[X][Y]) * dx[i]
        y = Y + int(matrix[X][Y]) * dy[i]

        if (0 <= x < N) and (0 <= y < M):
            if matrix[x][y] != 'H' and cnt + 1 > dp[x][y]:
                if visited[x][y]:
                    print(-1)
                    exit()
                else:
                    dp[x][y] = cnt + 1
                    visited[x][y] = True
                    dfs(x, y, cnt + 1)
                    visited[x][y] = False

dfs(0, 0, 1)
print(answer)
