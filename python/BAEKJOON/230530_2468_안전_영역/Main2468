import sys
sys.setrecursionlimit(1000000)
input = sys.stdin.readline

N = int(input())
matrix = [list(map(int, input().split())) for _ in range(N)]
maxHigh = max(max(matrix))
answer = []

def dfs(X, Y, high):
    visited[X][Y] = True
    dx = [-1, 1, 0, 0]
    dy = [0, 0, -1, 1]
    
    for i in range(4):
        x = X + dx[i]
        y = Y + dy[i]
        
        if (0 <= x < N) and (0 <= y < N):
            if not visited[x][y] and matrix[x][y] > high:
                dfs(x, y, high)

for rain in range(maxHigh):
    cnt = 0
    visited = [[False] * N for _ in range(N)]
    for i in range(N):
        for j in range(N):
            if not visited[i][j] and matrix[i][j] > rain:
                dfs(i, j, rain)
                cnt += 1
    answer.append(cnt)

print(max(answer))
